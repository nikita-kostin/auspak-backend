name: Deploy application to VM

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      port:
        required: true
        type: string
    secrets:
      vm_ssh_key:
        required: true
      vm_host:
        required: true
      vm_user:
        required: true
      vm_home_path:
        required: true
      supabase_url:
        required: true
      supabase_key:
        required: true
      graphhopper_api_key:
        required: true

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          env
          mkdir -p ~/.ssh
          echo "${{ secrets.vm_ssh_key }}" > ~/.ssh/vm
          chmod 600 ~/.ssh/vm
          ssh-keyscan -p 22 -t ed25519 ${{ secrets.vm_host }} >> ~/.ssh/known_hosts

      - name: Stop the app and clean up
        run: |
          ssh -i ~/.ssh/vm "${{ secrets.vm_user }}@${{ secrets.vm_host }}" << END
            sudo docker stop auspak_${{ inputs.port }}
            sudo docker rm auspak_${{ inputs.port }}
            cd ~
            rm -rf ~/auspak_${{ inputs.port }}
            mkdir ~/auspak_${{ inputs.port }}
          END

      - name: Push repo to the host
        run: |
          scp -i ~/.ssh/vm -r ./* "${{ secrets.vm_user }}@${{ secrets.vm_host }}:${{ secrets.vm_home_path }}/auspak_${{ inputs.port }}"

      - name: Run the container
        run: |
          ssh -i ~/.ssh/vm "${{ secrets.vm_user }}@${{ secrets.vm_host }}" << END
            cd ~/auspak_${{ inputs.port }}
            sudo docker build -t auspak-image --target app .
            sudo docker run -d --name=auspak_${{ inputs.port }} -e SUPABASE_URL=${{ secrets.supabase_url }} -e SUPABASE_KEY=${{ secrets.supabase_key }} -e AUSPAK_PORT=${{ inputs.port }} -e GRAPHOPPER_API_KEY=${{ secrets.graphhopper_api_key }} -p ${{ inputs.port }}:${{ inputs.port }} auspak-image
          END
